{
  "hash": "6a6c9680082ce475822757ac85eeae15",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"CSC3107 P2 Lab 1\"\nauthor: \"Loo Siong Yu\"\nformat: html\ntheme: lux\n---\n\n\n# Loading library\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n# Task 2: Aggregating Information about Flights\n## Unzip the folder\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nunzip(\"nycflights13_data.zip\")\n```\n:::\n\n\n## Import data\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nairlines <- read_csv(\"airlines.csv\")\nairports <- read_csv(\"airports.csv\")\nflights <- read_csv(\"flights.csv\")\nplanes <- read_csv(\"planes.csv\")\nweather <- read_csv(\"weather.csv\")\n```\n:::\n\n\n## 2.2 Rankings of New York City's Main Airports by Number of Destinations Served\nWhat are the rankings of New York City’s main airports in terms of the number of destinations served? Include columns for the following attributes in exactly this order:\n\n- Three-letter airport code\n- Airport name\n- Number of destinations\n- Rank. The busiest airport is ranked first.\n\nSort the results first by rank and, then, alphabetically by the three-letter airport code.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  distinct(origin, dest) |>\n  count(origin, name = \"n_dest\") |>\n  left_join(airports, join_by(\"origin\" == \"faa\")) |>\n  mutate(rank = min_rank(desc(`n_dest`))) |>\n  select(origin, name, n_dest, rank) |>\n  arrange(rank, origin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  origin name                n_dest  rank\n  <chr>  <chr>                <int> <int>\n1 EWR    Newark Liberty Intl     82     1\n2 LGA    La Guardia              68     2\n3 JFK    John F Kennedy Intl     65     3\n```\n\n\n:::\n:::\n\n\n## 2.3 Top Ten Destination Airports by Seats\nWhich ten destination airports are served by the greatest number of seats from New York City? If airports are tied for the tenth place, ensure that all tied airports are included in the output. Include columns for the following attributes in exactly this order:\n\n- Three-letter airport code\n- Airport name\n- Number of seats\n- Rank. The destination with most seats is ranked first.\n\nSort the results first by rank and, then, alphabetically by the three-letter airport code.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  left_join(planes, join_by(\"tailnum\" == \"tailnum\")) |>\n  # summarize the data by calculating the total no. of seats and grouping the summarized data by dest with the .by, resulting in the total no. of seats assigning to each unique destination\n  summarize(n_seats = sum(seats), .by = dest) |>\n  left_join(airports, join_by(\"dest\" == \"faa\")) |>\n  mutate(rank = min_rank(desc(n_seats))) |>\n  select(dest, name, n_seats, rank) |>\n  arrange(rank, dest) |>\n  filter(rank <= 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   dest  name                            n_seats  rank\n   <chr> <chr>                             <dbl> <int>\n 1 LAX   Los Angeles Intl                3177738     1\n 2 MCO   Orlando Intl                    2362894     2\n 3 SFO   San Francisco Intl              2342074     3\n 4 CLT   Charlotte Douglas Intl          2201151     4\n 5 ATL   Hartsfield Jackson Atlanta Intl 2103603     5\n 6 FLL   Fort Lauderdale Hollywood Intl  2081712     6\n 7 ORD   Chicago Ohare Intl              1732559     7\n 8 IAH   George Bush Intercontinental    1216724     8\n 9 DEN   Denver Intl                     1206507     9\n10 TPA   Tampa Intl                      1153529    10\n```\n\n\n:::\n:::\n\nNote that all tail numbers and numbers of seats contain no NA:\n\n::: {.cell}\n\n```{.r .cell-code}\nanyNA(flights$tailnum) | anyNA(planes$tailnum) | anyNA(planes$seats)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n## 2.4 Top Ten Destination Airports Served by Flights from Each New York City Airport\nFor each of New York City’s main airports, which ten destination airports are most frequently served by flights? If airports are tied for the tenth place, ensure that all tied airports are included in the output. Include columns for the following attributes in exactly this order:\n\n- Three-letter code of the origin airport\n- Name of the origin airport\n- Three-letter code of the destination airport\n- Name of the destination airport\n- Number of flights\n- Rank. The destination with most flights is ranked first.\n\nFirst, sort the results alphabetically by the three-letter code of the origin airport, then by rank, and, lastly, alphabetically by the three-letter destination code.\n\nDisplay all rows in the output using ```print(n = Inf)```.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  count(origin, dest, name = \"n_flights\") |>\n  mutate(rank = min_rank(desc(n_flights)), .by = origin) |>\n  filter(rank <= 10) |>\n  left_join(airports, join_by(origin == faa)) |>\n  rename(origin_name = name) |>\n  left_join(airports, join_by(dest == faa)) |>\n  rename(dest_name = name) |>\n  select(origin, origin_name, dest, dest_name, n_flights, rank) |>\n  arrange(origin, rank, dest) |>\n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30 × 6\n   origin origin_name         dest  dest_name                    n_flights  rank\n   <chr>  <chr>               <chr> <chr>                            <int> <int>\n 1 EWR    Newark Liberty Intl BOS   General Edward Lawrence Log…      5278     1\n 2 EWR    Newark Liberty Intl SFO   San Francisco Intl                5016     2\n 3 EWR    Newark Liberty Intl ATL   Hartsfield Jackson Atlanta …      4950     3\n 4 EWR    Newark Liberty Intl CLT   Charlotte Douglas Intl            4943     4\n 5 EWR    Newark Liberty Intl MCO   Orlando Intl                      4858     5\n 6 EWR    Newark Liberty Intl LAX   Los Angeles Intl                  4434     6\n 7 EWR    Newark Liberty Intl IAH   George Bush Intercontinental      3844     7\n 8 EWR    Newark Liberty Intl ORD   Chicago Ohare Intl                3780     8\n 9 EWR    Newark Liberty Intl FLL   Fort Lauderdale Hollywood I…      3727     9\n10 EWR    Newark Liberty Intl DTW   Detroit Metro Wayne Co            3134    10\n11 JFK    John F Kennedy Intl LAX   Los Angeles Intl                 11082     1\n12 JFK    John F Kennedy Intl SFO   San Francisco Intl                7751     2\n13 JFK    John F Kennedy Intl MCO   Orlando Intl                      4735     3\n14 JFK    John F Kennedy Intl BOS   General Edward Lawrence Log…      4393     4\n15 JFK    John F Kennedy Intl FLL   Fort Lauderdale Hollywood I…      4003     5\n16 JFK    John F Kennedy Intl BUF   Buffalo Niagara Intl              3530     6\n17 JFK    John F Kennedy Intl LAS   Mc Carran Intl                    3402     7\n18 JFK    John F Kennedy Intl CLT   Charlotte Douglas Intl            2833     8\n19 JFK    John F Kennedy Intl IAD   Washington Dulles Intl            2614     9\n20 JFK    John F Kennedy Intl TPA   Tampa Intl                        2380    10\n21 LGA    La Guardia          ATL   Hartsfield Jackson Atlanta …      7795     1\n22 LGA    La Guardia          ORD   Chicago Ohare Intl                5521     2\n23 LGA    La Guardia          CLT   Charlotte Douglas Intl            4523     3\n24 LGA    La Guardia          DCA   Ronald Reagan Washington Na…      4487     4\n25 LGA    La Guardia          BOS   General Edward Lawrence Log…      4012     5\n26 LGA    La Guardia          FLL   Fort Lauderdale Hollywood I…      3951     6\n27 LGA    La Guardia          MCO   Orlando Intl                      3641     7\n28 LGA    La Guardia          DEN   Denver Intl                       3510     8\n29 LGA    La Guardia          DTW   Detroit Metro Wayne Co            3240     9\n30 LGA    La Guardia          IAH   George Bush Intercontinental      2832    10\n```\n\n\n:::\n:::\n\n\n## 2.5 Rankings of New York City's Main Airports by Mean Departure Delay\nWhat are the rankings of New York City’s main airports in terms of mean departure delay, weighting each flight equally when taking the average? Remove flights with unknown departure delays from the analysis. Include columns for the following attributes in exactly this order:\n\n- Three-letter airport code\n- Airport name\n- Mean departure delay in minutes\n- Rank. The airport with the shortest mean departure delay is ranked first.\n\nSort the results first by rank and, then, alphabetically by the three-letter airport code.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  group_by(origin) |>\n  summarize(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) |>\n  mutate(rank = min_rank(mean_dep_delay)) |>\n  left_join(airports, join_by(origin == faa)) |>\n  select(origin, name, mean_dep_delay, rank) |>\n  arrange(rank, origin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  origin name                mean_dep_delay  rank\n  <chr>  <chr>                        <dbl> <int>\n1 LGA    La Guardia                    11.3     1\n2 JFK    John F Kennedy Intl           12.3     2\n3 EWR    Newark Liberty Intl           15.3     3\n```\n\n\n:::\n:::\n\n\n## 2.6 Percentage of On-Time Flights despite Departure Delay\nWhat percentage of flights that experienced a departure delay of at least 30 minutes still managed to arrive on time? Remove flights with unknown departure or arrival delays from the analysis. Provide the answer as a single-element numeric vector. Confirm that the answer has the correct length and class.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\non_time_pct <-\n  flights |>\n    drop_na(ends_with(\"delay\")) |>\n    filter(dep_delay >= 30) |>\n    mutate(on_time_arr = arr_delay <= 0) |>\n    count(on_time_arr, name=\"n_flights\") |>\n    mutate(pct = n_flights / sum(n_flights) * 100) |>\n    filter(on_time_arr == TRUE) |>\n    pull(var = pct)\non_time_pct\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.171782\n```\n\n\n:::\n:::\n\nHere is a confirmation that the result is a single-element numeric vector:\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nis.numeric(on_time_pct) && length(on_time_pct) == 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n## 2.7 On-Time Departure Percentage by Hour of the Day\nTabulate the percentage of on-time departures for each hour of the day when the plane is scheduled to leave. Remove flights with unknown departure delays from the analysis. Include columns for the following attributes in exactly this order:\n\n- Hour of the day\n- Percentage of on-time departures\n\nSort the results by the hour of the day. Display all hours in the output.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  drop_na(dep_delay) |>\n  mutate(on_time_dep = dep_delay <= 0) |>\n  count(hour, on_time_dep, name = \"n_flights\") |>\n  group_by(hour) |>\n  mutate(pct_flights = n_flights / sum(n_flights) * 100) |>\n  filter(on_time_dep == TRUE) |>\n  select(hour, pct_flights) |>\n  arrange(hour) |>\n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 19 × 2\n# Groups:   hour [19]\n    hour pct_flights\n   <dbl>       <dbl>\n 1     5        72.9\n 2     6        77.6\n 3     7        77.5\n 4     8        73.9\n 5     9        72.8\n 6    10        69.4\n 7    11        67.2\n 8    12        62.5\n 9    13        57.0\n10    14        54.2\n11    15        48.9\n12    16        50.4\n13    17        47.4\n14    18        47.9\n15    19        46.3\n16    20        45.9\n17    21        45.2\n18    22        54.9\n19    23        41.7\n```\n\n\n:::\n:::\n\n\n## 2.8 Planes Operated by Multiple Airlines\nWhich planes, identified by their tail number, were operated by more than one airline? Include columns for the following attributes in exactly this order:\n\n- Tail number\n- Manufacturer\n- Model\n- Number of airlines (must be greater than 1)\n\nSort the results alphabetically by tail number. Display all planes in the output.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  distinct(tailnum, carrier) |>\n  summarize(n_carriers = n(), .by = tailnum) |>\n  filter(n_carriers > 1) |>\n  left_join(planes, join_by(tailnum)) |>\n  select(tailnum, manufacturer, model, n_carriers) |>\n  arrange(tailnum) |>\n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 17 × 4\n   tailnum manufacturer   model       n_carriers\n   <chr>   <chr>          <chr>            <int>\n 1 N146PQ  BOMBARDIER INC CL-600-2D24          2\n 2 N153PQ  BOMBARDIER INC CL-600-2D24          2\n 3 N176PQ  BOMBARDIER INC CL-600-2D24          2\n 4 N181PQ  BOMBARDIER INC CL-600-2D24          2\n 5 N197PQ  BOMBARDIER INC CL-600-2D24          2\n 6 N200PQ  BOMBARDIER INC CL-600-2D24          2\n 7 N228PQ  BOMBARDIER INC CL-600-2D24          2\n 8 N232PQ  BOMBARDIER INC CL-600-2D24          2\n 9 N933AT  BOEING         717-200              2\n10 N935AT  BOEING         717-200              2\n11 N977AT  BOEING         717-200              2\n12 N978AT  BOEING         717-200              2\n13 N979AT  BOEING         717-200              2\n14 N981AT  BOEING         717-200              2\n15 N989AT  BOEING         717-200              2\n16 N990AT  BOEING         717-200              2\n17 N994AT  BOEING         717-200              2\n```\n\n\n:::\n:::\n\n\n---\n\n# Task 3: Exploring Flights from New York City to Chicago\n## 3.1 Identify Chicago Airports\nWhich airport names in ```airports.csv``` contain the string ```\"Chicago\"```? You may find the tidyverse’s ```str_detect()``` function useful for this task. Create a data frame named ```chicago_airports``` to save the result, including only the ```faa``` and ```name``` columns. Display the content of ```chicago_airports```.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nchicago_aiports <-\n  airports |>\n    filter(str_detect(name, \"Chicago\")) |>\n    select(faa, name)\n\nchicago_aiports\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  faa   name                                  \n  <chr> <chr>                                 \n1 GYY   Gary Chicago International Airport    \n2 MDW   Chicago Midway Intl                   \n3 ORD   Chicago Ohare Intl                    \n4 PWK   Chicago Executive                     \n5 RFD   Chicago Rockford International Airport\n```\n\n\n:::\n:::\n\n\n## 3.2 Airlines Serving Chicago from New York City\nWhich airlines operated flights from New York City to Chicago? Include columns for the following attributes in exactly this order:\n\n- Two-letter airline code\n- Airline name\n- Number of flights\n- Rank. The airline operating most flights is ranked first.\n\nSort the results first by rank and, then, alphabetically by the two-letter airline code.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  left_join(airports, join_by(dest == faa)) |>\n  filter(str_detect(name, \"Chicago\")) |>\n  summarize(n_flights = n(), .by = carrier) |>\n  left_join(airlines, join_by(carrier)) |>\n  mutate(rank = min_rank(desc(n_flights))) |>\n  select(carrier, name, n_flights, rank) |>\n  arrange(rank, carrier)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n  carrier name                     n_flights  rank\n  <chr>   <chr>                        <int> <int>\n1 UA      United Air Lines Inc.         6752     1\n2 WN      Southwest Airlines Co.        4102     2\n3 AA      American Airlines Inc.        2500     3\n4 9E      Endeavor Air Inc.              989     4\n5 B6      JetBlue Airways                898     5\n6 MQ      Envoy Air                       47     6\n7 EV      ExpressJet Airlines Inc.         2     7\n8 OO      SkyWest Airlines Inc.            1     8\n```\n\n\n:::\n:::\n\n**Prof answer** -\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  semi_join(chicago_aiports, join_by(dest == faa)) |>\n  count(carrier, name = \"n_flights\") |>\n  left_join(airlines, join_by(carrier)) |>\n  mutate(rank = min_rank(desc(n_flights))) |>\n  select(carrier, name, n_flights, rank) |>\n  arrange(rank, carrier)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n  carrier name                     n_flights  rank\n  <chr>   <chr>                        <int> <int>\n1 UA      United Air Lines Inc.         6752     1\n2 WN      Southwest Airlines Co.        4102     2\n3 AA      American Airlines Inc.        2500     3\n4 9E      Endeavor Air Inc.              989     4\n5 B6      JetBlue Airways                898     5\n6 MQ      Envoy Air                       47     6\n7 EV      ExpressJet Airlines Inc.         2     7\n8 OO      SkyWest Airlines Inc.            1     8\n```\n\n\n:::\n:::\n\n\n## 3.3 On-Time Arrival Percentages by Airline\nOf all airlines that operated at least 100 flights from New York City to Chicago, which ones had the ten highest percentages of known on-time arrivals in Chicago? Include columns for the following attributes in exactly this order:\n\n- Two-letter airline code\n- Airline name\n- Percentage of on-time arrivals\n- Rank\n\nSort the results first by rank and, then, alphabetically by two-letter airline code.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  semi_join(chicago_aiports, join_by(dest == faa)) |>\n  filter(n() >= 100, .by = carrier) |>\n  mutate(on_time_arr = arr_delay <= 0) |>\n  count(carrier, on_time_arr, name = \"n_flights\") |>\n  mutate(pct = n_flights / sum(n_flights) * 100, .by = carrier) |>\n  filter(on_time_arr == TRUE) |>\n  left_join(airlines, join_by(carrier)) |>\n  mutate(rank = min_rank(desc(pct))) |>\n  select(carrier, name, pct, rank) |>\n  arrange(rank, carrier)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  carrier name                     pct  rank\n  <chr>   <chr>                  <dbl> <int>\n1 AA      American Airlines Inc.  67.6     1\n2 UA      United Air Lines Inc.   62.1     2\n3 9E      Endeavor Air Inc.       56.2     3\n4 B6      JetBlue Airways         52.6     4\n5 WN      Southwest Airlines Co.  52.4     5\n```\n\n\n:::\n:::\n\n\n## 3.4 Top Ten Models by Frequency\nWhat were the ten most frequent combinations of manufacturer and model used for flights from New York City to Chicago? If manufacturer-model combinations are tied for the tenth place, incorporate all of them in the output. Include columns for the following attributes in exactly this order:\n\n- Manufacturer\n- Model\n- Number of flights\n- Rank\n\nSort the results first by rank, then alphabetically by manufacturer, and, lastly, by model.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  semi_join(chicago_aiports, join_by(dest == faa)) |>\n  left_join(planes, join_by(tailnum)) |>\n  count(manufacturer, model, name = \"n_flights\") |>\n  mutate(rank = min_rank(desc(n_flights))) |>\n  slice_min(rank, n = 10) |> # or use filter(rank <= 10)\n  arrange(rank, manufacturer, model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   manufacturer      model           n_flights  rank\n   <chr>             <chr>               <int> <int>\n 1 BOEING            737-7H4              3318     1\n 2 AIRBUS INDUSTRIE  A319-131             1946     2\n 3 AIRBUS INDUSTRIE  A320-232             1743     3\n 4 MCDONNELL DOUGLAS DC-9-82(MD-82)       1433     4\n 5 BOEING            737-824              1066     5\n 6 BOMBARDIER INC    CL-600-2D24           987     6\n 7 MCDONNELL DOUGLAS DC-9-83(MD-83)        701     7\n 8 EMBRAER           ERJ 190-100 IGW       658     8\n 9 BOEING            737-724               613     9\n10 AIRBUS            A320-232              395    10\n```\n\n\n:::\n:::\n\n\n## 3.5 Top Ten Planes by Mean Speed\nWhich ten planes, among those with at least ten flights departing from New York City, exhibited the highest observed mean speed on flights to Chicago? The speed calculation considers the distance between airports and the time spent in the air, with each flight equally weighted in the average. Remove flights with unknown time spent in the air from the analysis. In the case of ties for the tenth place, ensure that all tied planes are included in the output. Include columns for the following attributes in exactly this order:\n\n- Tail number\n- Manufacturer\n- Model\n- Mean speed in miles per hour\n- Rank\n\nSort the results first by rank and, then, alphabetically by tail number.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  semi_join(chicago_aiports, join_by(dest == faa)) |>\n  mutate(speed_2 = distance / air_time * 60) |>\n  # with at least 10 flights done by the plane\n  filter(n() >= 10, .by = tailnum) |>\n  summarize(mean_speed = mean(speed_2, na.rm = TRUE), .by = tailnum) |>\n  left_join(planes, join_by(tailnum)) |>\n  mutate(rank = min_rank(desc(mean_speed))) |>\n  filter(rank <= 10) |>\n  select(tailnum, manufacturer, model, mean_speed, rank) |>\n  arrange(rank, tailnum)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   tailnum manufacturer model    mean_speed  rank\n   <chr>   <chr>        <chr>         <dbl> <int>\n 1 N963WN  BOEING       737-7H4        409.     1\n 2 N416WN  BOEING       737-7H4        408.     2\n 3 N494WN  BOEING       737-7H4        405.     3\n 4 N967WN  BOEING       737-7H4        404.     4\n 5 N8307K  BOEING       737-8H4        404.     5\n 6 N209WN  BOEING       737-7H4        404.     6\n 7 N489UA  AIRBUS       A320-232       403.     7\n 8 N417WN  BOEING       737-7H4        403.     8\n 9 N769SW  BOEING       737-7H4        403.     9\n10 N925WN  BOEING       737-7H4        403.    10\n```\n\n\n:::\n:::\n\n\n## 3.6 Were there daily departures in October?\nWas at least one departure from New York City to Chicago scheduled every day in October 2013? Provide your answer in the form of a single-element logical vector. Confirm that the answer has the correct length and class.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndeparted_daily <-\n  flights |>\n    semi_join(chicago_aiports, join_by(dest == faa)) |>\n    filter(month == 10) |>\n    distinct(day) |>\n    pull() |># this converts the resulting data into a vector\n    as.integer() |> # this converts the original double vector into an integer vector\n    identical(1:31) # this checks if the resulting vector is identical to the integer vector from 1 to 31\n  \ndeparted_daily\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n**Note**: Here is confirmation that the result is a single-element logical vector -\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlength(departed_daily) == 1 & is.logical(departed_daily)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n---\n\n# Task 4: Uncovering associations between weather and flight operations\n## 4.1 Airport-Hour Combinations Absent from the Weather Table\nHow many unique combinations of origin airport and ```time_hour``` are present in ```flights.csv``` but absent from ```weather.csv```? Provide your answer in the form of a single-element numeric vector. Confirm that the answer has the correct length and class.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nuniqueComb <-\n  flights |>\n    distinct(origin, time_hour) |>\n    anti_join(weather, join_by(origin, time_hour)) |>\n    count(origin, name = \"n_combination\") |>\n    summarize(sum(n_combination)) |>\n    pull()\n\nuniqueComb\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 101\n```\n\n\n:::\n:::\n\n**Prof ans ** -\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nn_absent <-\n  flights |>\n    distinct(origin, time_hour) |>\n    anti_join(weather, join_by(origin, time_hour)) |>\n    nrow()\nn_absent\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 101\n```\n\n\n:::\n:::\n\n**Note**: Here is confirmation that the result is correct length and class\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlength(uniqueComb) == 1 & is.numeric(uniqueComb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nlength(n_absent) == 1 & is.numeric(n_absent)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n## 4.2 On-time Departures by Airport and Precipitation\nWhat is the percentage of on-time departures from each of New York City’s main airports under dry conditions (i.e., precip = 0) and under wet conditions? Remove flights from the analysis if the delay or precipitation at departure is unknown. Include columns for the following attributes in exactly this order:\n\n- Three-letter airport code\n- Airport name\n- ```is_dry```: Logical values indicating zero precipitation.\n- Percentage of on-time departures\n\nFirst, sort the results alphabetically by the three-letter airport code and, then, by the presence of precipitation (with dry conditions appearing before wet ones).\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  left_join(weather, join_by(origin, time_hour)) |>\n  drop_na(precip, dep_delay) |>\n  mutate(is_dry = precip == 0, on_time_dep = dep_delay <= 0) |>\n  count(origin, is_dry, on_time_dep, name = \"n_flights\") |> # count the number of flights by origin, is_dry, and on_time_dep\n  mutate(pct_flights = n_flights / sum(n_flights) * 100, .by = c(origin, is_dry)) |>\n  filter(on_time_dep == TRUE) |>\n  left_join(airports, join_by(origin == faa)) |>\n  select(origin, name, is_dry, pct_flights) |>\n  arrange(origin, desc(is_dry))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  origin name                is_dry pct_flights\n  <chr>  <chr>               <lgl>        <dbl>\n1 EWR    Newark Liberty Intl TRUE          56.0\n2 EWR    Newark Liberty Intl FALSE         37.5\n3 JFK    John F Kennedy Intl TRUE          62.5\n4 JFK    John F Kennedy Intl FALSE         44.3\n5 LGA    La Guardia          TRUE          66.9\n6 LGA    La Guardia          FALSE         43.2\n```\n\n\n:::\n:::\n\n\n## 4.3 Rank Airports by Low-Visibility Departure Delays\nHow do New York City’s main airports rank in terms of mean departure delay when the visibility was less than one mile? Remove flights with unknown departure delays from the analysis. Include columns for the following attributes in exactly this order:\n\n- Three-letter airport code\n- Airport name\n- Mean departure delay in minutes\n- Rank. The airport with the shortest mean departure delay is ranked first.\n\nSort the results first by rank and, then, alphabetically by the three-letter airport code.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nflights |>\n  left_join(weather, join_by(origin, time_hour)) |>\n  drop_na(dep_delay) |>\n  filter(visib < 1) |>\n  summarize(mean_dep_delay = mean(dep_delay), .by = origin) |>\n  left_join(airports, join_by(origin == faa)) |>\n  mutate(rank = min_rank(mean_dep_delay)) |>\n  select(origin, name, mean_dep_delay, rank) |>\n  arrange(rank, origin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  origin name                mean_dep_delay  rank\n  <chr>  <chr>                        <dbl> <int>\n1 LGA    La Guardia                    27.8     1\n2 JFK    John F Kennedy Intl           29.0     2\n3 EWR    Newark Liberty Intl           33.4     3\n```\n\n\n:::\n:::\n\n\n## 4.4 Correlation between Temperature and Departure Delay\nWhat is the correlation coefficient between the mean temperature of the day and the mean departure delay on that day? Remove flights from the analysis if the temperature or departure delay is unknown. Provide the answer in the form of a single-element numeric vector. Confirm that the answer has the correct length and class.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ncorr <-\n  flights |>\n    left_join(weather, join_by(origin, year, month, day, time_hour)) |>\n    drop_na(temp, dep_delay) |>\n    summarize(mean_temp = mean(temp), mean_dep_delay = mean(dep_delay), .by = c(year, month, day)) |>\n    summarize(cor = cor(mean_temp, mean_dep_delay)) |>\n    pull()\n\ncorr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1481848\n```\n\n\n:::\n:::\n\n**Note**: Here is confirmation that corr is a single-element numeric vector - \n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlength(corr) == 1 & is.numeric(corr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n",
    "supporting": [
      "Lab01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}