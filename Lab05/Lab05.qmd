---
title: "Lab05"
format: html
editor: visual
theme: lux
knitr:
  opts_chunk:
    fig.width: 7.5
    fig.height: 5
    fig.align: 'center'
    message: false
---

# Setup

Load the necessary libraries

```{r}
#| label: required_packages

library(tidyverse)
library(countrycode)
library(ggrepel)
library(scales)
```

# 2 Preparing the Data

## 2.1 Data Import

```{r}
#| label: data_import

gdp_data <- read_csv("data/API_NY.GDP.PCAP.KD_DS2_en_csv_v2_144436/API_NY.GDP.PCAP.KD_DS2_en_csv_v2_144436.csv", skip=3)
life_exp_data <- read_csv("data/API_SP.DYN.LE00.IN_DS2_en_csv_v2_144366/API_SP.DYN.LE00.IN_DS2_en_csv_v2_144366.csv", skip=3)
pop_data <- read_csv("data/API_SP.POP.TOTL_DS2_en_csv_v2_144171/API_SP.POP.TOTL_DS2_en_csv_v2_144171.csv", skip=3)
```

## 2.2 Column Selection

```{r}
#| label: column_selection

gdp_data <- gdp_data |>
  select("Country Name", "Country Code", "2019") |>
  rename(country = "Country Name", code = "Country Code", gdp_per_cap = "2019")

life_exp_data <- life_exp_data |>
  select("Country Name", "Country Code", "2019") |>
  rename(country = "Country Name", code = "Country Code", life_exp = "2019")

pop_data <- pop_data |>
  select("Country Name", "Country Code", "2019") |>
  rename(country = "Country Name", code = "Country Code", pop = "2019")
```

## 2.3 Merge Data

```{r}
#| label: merge_data

countries <- gdp_data |>
  left_join(life_exp_data, by=c('country', 'code')) |>
  left_join(pop_data, by=c('country', 'code')) |>
  select('country', 'code', 'gdp_per_cap', 'life_exp', 'pop')
```

## 2.4 Identify Non-Country Rows

```{r}
#| label: identify_non_country_rows

countries_filtered <- countries |>
  mutate(code_2 = countrycode(code, origin="wb", destination="wb", warn=FALSE)) |>
  filter(!is.na(code_2))

difference <- paste0("The number of non-country rows: ", count(countries) - count(countries_filtered))

# Print the message
print(difference)
```


## 2.5 Append Continent Column

```{r}
#| label: append_continent_column

countries_filtered <- countries_filtered |>
  mutate(continent = countrycode(code, origin="wb", destination="continent", warn=FALSE))

head(countries_filtered)
```

## 2.6 Remove Missing Data

```{r}
#| label: remove_missing_data

countries_filtered <- countries_filtered |>
  drop_na()

any(is.na(countries_filtered))
```

## 2.7 Count Countries

```{r}
#| label: count_countries

num_countries <- 
  distinct(countries_filtered, country) |>
  count()

num_countries
```

## 2.8 Prepare Country Labels

```{r}
#| lbael: prepare_country_labels

countries_filtered <- countries_filtered |>
  mutate(label = case_when(
    rank(desc(gdp_per_cap)) <= 10 ~ code,
    rank(gdp_per_cap) <= 10 ~ code,
    rank(desc(life_exp)) <= 10 ~ code,
    rank(life_exp) <= 10 ~ code,
    rank(desc(pop)) <= 10 ~ code,
    TRUE ~ ""
  ))

countries_filtered
```

# 3 Visualizing the Data
## 3.1 Set Up Basic Plot
```{r}
#| label: set_up_basic_plot

basic_plot <- ggplot(countries_filtered, aes(x = gdp_per_cap, y = life_exp, size = pop, color = continent)) +
  geom_point(alpha = 0.6)

basic_plot
```

## 3.2 Add Labels

```{r}
#| label: add_labels

basic_plot <- basic_plot +
  geom_text_repel(aes(label = label), show.legend = FALSE, max.overlaps = Inf)

basic_plot
```

## 3.3 Add Trend Curve

```{r}
#| label: add_trend_curve

basic_plot <- basic_plot +
  geom_smooth(method = "loess", se = FALSE, color="gray", size=1, aes(weight=pop))

basic_plot
```

## 3.4 Add Annotations

```{r}
#| label: add_annotations

basic_plot <- basic_plot +
  labs(
    title = "GDP per Capita vs. Life Expectancy",
    x = "GDP per Capita (US$, PPP 2019)",
    y = "Life Expectancy (years)",
    legend = "Continent",
    size = "Population",
    caption = "Source: World Bank"
  )

basic_plot
```

## 3.5 Change x-Axis Scale

```{r}
#| label: change_x_axis_scale

basic_plot <- basic_plot + 
  scale_x_log10(
    breaks = breaks_log(n = 10),
    labels = dollar_format(scale = 1)
  )

basic_plot
```

## 3.6 Change Size Scale

```{r}
#| label: change_size_scale

basic_plot <- basic_plot +
  scale_size_area(
    labels = c("1M", "10M", "100M", "1B"),
    max_size = 20
  )

basic_plot
```

## 3.7 Change Color Scale

```{r}
#| label: change_color_scale

basic_plot <- basic_plot +
  scale_color_brewer(palette = "Set1")

basic_plot
```

## 3.8 Override Transparency in Legend

```{r}
#| label: override_transparency_in_legend

basic_plot <- basic_plot +
  guides(
    color = guide_legend(override.aes = list(alpha = 1, size = 5)),
    size = guide_legend(override.aes = list(size = 5))
  )

basic_plot
```

## 3.9 Choose a ggplot2 Theme

```{r}
#| label: choose_a_ggplot2_theme

basic_plot <- basic_plot + theme_classic()

basic_plot
```
Tried various theme such as `theme_minimal()`, `theme_light()`, i feel that `theme_classic()` is the best for this plot because the theme removed the coordinates system, which is not necessary for this plot. At the same time, it bolded the axis lines which makes the plot more outstanding. Overall, the looks and feels of the plot is more professional and clean.

## 3.10 Reason About the Data
1. The plot shows a positive correlation between GDP per Capita and Life Expectancy. The trend curve is increasing, which means that countries with higher GDP per Capita tend to have higher life expectancy. <br>
2. The size of the bubble represents the population of the country. The larger the bubble, the larger the population. This visualisation provide a clear understanding of how the bubble are portrayed in the plot. <br>
3. The color of the bubble represents the continent of the country. The legend on the right shows the color mapping for each continent. <br>
4. The plot is based on the data from 2019. The data is sourced from the World Bank.